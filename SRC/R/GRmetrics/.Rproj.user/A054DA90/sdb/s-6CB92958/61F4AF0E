{
    "contents" : "# Case C (example 4) test\n#install.packages('readr')      # un-comment and install these packages if necessary\n#install.packages('devtools')   # un-comment and install these packages if necessary\n\n# Load GRmetrics functions\ndevtools::load_all()\n# Load Case C (example 4) input\ndata(\"inputCaseC\")\n# Run GRfit function with case = \"C\"\noutput4 = GRfit(inputData = inputCaseC, groupingVariables = c('cell_line','agent', 'perturbation','replicate', 'time'), case = \"C\")\n\n# Load Case A (example 1) input\ndata(\"inputCaseA\")\n# Run GRfit function with case = \"A\"\noutput1 = GRfit(inputData = inputCaseA, groupingVariables = c('cell_line','agent', 'perturbation','replicate', 'time'), case = \"A\")\n\n# change type integer to numeric for the sake of testing\noutput1[[1]]$replicate = as.numeric(output1[[1]]$replicate)\nall.equal(output1, output4)\n#[1] TRUE\n# Test passed - output from Case C matches output from Case A\n\ncolnames(inputCaseC)\n#[1] \"cell_line\"     \"agent\"         \"perturbation\"  \"replicate\"     \"time\"          \"concentration\" \"cell_count\"\ncolnames(inputCaseC)[6] = \"conc\"\ncolnames(inputCaseC)[7] = \"count\"\noutputC = GRfit(inputData = inputCaseC, groupingVariables = c('cell_line','agent', 'perturbation','replicate', 'time'), case = \"C\", concentration = 'conc', cell_count = 'count')\n\ntest = readr::read_tsv('data/toy_example_input1.tsv')\ncolnames(test)\n# [1] \"cell_line\"         \"agent\"             \"perturbation\"      \"replicate\"         \"time\"\n# [6] \"concentration\"     \"cell_count\"        \"cell_count__ctrl\"  \"cell_count__time0\"\n\n# changing column names just to test it out\ncolnames(test)[6] = \"conc\"\ncolnames(test)[7] = \"count_end\"\ncolnames(test)[8] = \"count_ctrl\"\ncolnames(test)[9] = \"count_start\"\n\ntest_output = GRfit(inputData = test, groupingVariables = c('cell_line','agent', 'perturbation','replicate', 'time'), GRtable = 'both', case = \"A\", concentration = 'conc', cell_count = 'count_end', cell_count__time0 = 'count_start', cell_count__ctrl = 'count_ctrl')\n\ntest = readr::read_tsv('data/toy_example_input1.tsv')\ncolnames(test)[6] = \"conc\"\ncolnames(test)[7] = \"count_end\"\ntest_output = GRfit(inputData = test, groupingVariables = c('cell_line','agent', 'perturbation','replicate', 'time'), GRtable = 'both', case = \"A\", concentration = 'conc', cell_count = 'count_end')\n\n\n# change type integer to numeric for the sake of testing\ntest_output[[1]]$replicate = as.numeric(test_output[[1]]$replicate)\nall.equal(test_output, output1)\n#[1] TRUE\n# Test passed - output from case A work when column names are changed\n\ndrc_output = GRfit(inputCaseA, groupingVariables = c('cell_line','agent'), case = \"A\")\nGRdrawDRC(drc_output, experiments = c('BT20 drugA', 'MCF10A drugA', 'MCF7 drugA'), min = 10^(-4), max = 10^2)\nGRdrawDRC(drc_output)\nGRdrawDRC(drc_output, plotly = F)\n\nGRscatter(output1, 'GR50', 'agent', c('drugA','drugD'), 'drugB')\nGRscatter(output1, 'GR50', 'agent', c('drugA','drugD'), 'drugB', plotly = F)\n\nGRbox(output1, GRmetric ='GRinf', groupVariable = 'cell_line', pointColor = 'agent' , factors = c('BT20', 'MCF10A'))\nGRbox(output1, GRmetric ='GRinf', groupVariable = 'cell_line', pointColor = 'agent' , factors = c('BT20', 'MCF10A'), plotly = F)\nGRbox(output1, GRmetric ='GRinf', groupVariable = 'cell_line', pointColor = 'agent' , factors = c('BT20', 'MCF10A'), plotly = F)\n\n",
    "created" : 1466109770631.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2650173243",
    "id" : "61F4AF0E",
    "lastKnownWriteTime" : 1466113220,
    "path" : "~/Desktop/Git/Public Github/GRmetrics/tests/test.R",
    "project_path" : "tests/test.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}